{"version":3,"sources":["modules/CityComponent.js","modules/WeatherComponent.js","App.js","index.js"],"names":["WeatherLogo","styled","img","ChooseCityLabel","span","SearchBox","form","CityComponent","props","updateCity","fetchWeather","src","onSubmit","placeholder","onChange","e","target","value","type","WeatherCondition","div","Condition","Location","WeatherInfo","WeatherInfoContainer","InfoContainer","InfoIcon","InfoLabel","WeatherInfoComponent","name","WeatherInfoIcons","sunset","sunrise","humidity","wind","pressure","WeatherComponent","timeStamp","weather","isDay","icon","includes","Math","floor","main","temp","description","sys","country","Date","getHours","getMinutes","speed","Container","AppLabel","App","useState","city","updateWeather","a","preventDefault","axios","get","response","console","log","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.064da2dd.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst WeatherLogo = styled.img`\r\n    width: 140px;\r\n    height: 140px;\r\n    margin: 40px auto;\r\n`;\r\n\r\nconst ChooseCityLabel = styled.span`\r\n    color: black;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n`;\r\n\r\nconst SearchBox = styled.form`\r\n    display: flex;\r\n    flex-direction: row;\r\n    border: black solid 1px;\r\n    color: black;\r\n    margin: 20px auto;\r\n    & input {\r\n        padding: 10px;\r\n        font-size: 14px;\r\n        font-weight: bold;\r\n        border: none;\r\n        outline: none;\r\n    }\r\n\r\n    & button {\r\n        padding: 10px;\r\n        font-size: 14px;\r\n        color: white;\r\n        background-color: black;\r\n        font-weight: bold;\r\n        border: none;\r\n        outline: none;\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst CityComponent = (props) => {\r\n    const { updateCity, fetchWeather } = props;\r\n    return (\r\n        <>\r\n            <WeatherLogo src=\"/icons/perfect-day.svg\" />\r\n            <ChooseCityLabel>Find Weather of your city</ChooseCityLabel>\r\n            <SearchBox onSubmit={fetchWeather}>\r\n                <input placeholder=\"City\" onChange={(e) => updateCity(e.target.value)} />\r\n                <button type=\"submit\">Search</button>\r\n            </SearchBox>\r\n        </>);\r\n};\r\n\r\nexport default CityComponent;","import styled from \"styled-components\";\r\n\r\nconst ICON_URL = \"https://openweathermap.org/img/w\";\r\n\r\nconst WeatherCondition = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    width: 100%;\r\n    justify-content: space-between;\r\n    margin: 50px auto; \r\n`;\r\n\r\nconst Condition = styled.span`\r\n    margin: 20px auto;\r\n    font-size: 14px;\r\n    & span {\r\n        font-size: 28px;\r\n    }\r\n`;\r\n\r\nconst WeatherLogo = styled.img`\r\n    width: 100px;\r\n    height: 100px;\r\n    margin: 5px auto;\r\n`;\r\n\r\nconst Location = styled.span`\r\n    font-size: 28px;\r\n    font-weight: bold;\r\n`;\r\n\r\nconst WeatherInfo = styled.span`\r\n    margin: 20px 25px 10px ;\r\n    font-size: 14px;\r\n    font-weight: bold;\r\n    text-align: start;\r\n    width: 90%;\r\n`;\r\n\r\nconst WeatherInfoContainer = styled.div`\r\n    display: flex;\r\n    width: 90%;\r\n    flex-direction: row;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nconst InfoContainer = styled.div`\r\n    display: flex;\r\n    margin: 5px 10px;\r\n    flex-direction: row;\r\n    justifiy-content: space-evenly;\r\n    align-items: center; \r\n`;\r\n\r\nconst InfoIcon = styled.img`\r\n    width: 36px;\r\n    height: 36px;\r\n`;\r\n\r\nconst InfoLabel = styled.span`\r\n    display: flex;\r\n    flex-direction: column;\r\n    font-size: 14px;\r\n    margin: 15px;\r\n    & span{\r\n        font-size: 12px;\r\n        text-transform: capitalize;\r\n    }\r\n`;\r\n\r\nconst WeatherInfoComponent = (props) => {\r\n    const { name, value } = props;\r\n\r\n    return (\r\n        <InfoContainer>\r\n            <InfoIcon src={WeatherInfoIcons[name]} />\r\n            <InfoLabel>\r\n                {value}\r\n                <span>{name}</span>\r\n            </InfoLabel>\r\n        </InfoContainer>\r\n    );\r\n};\r\n\r\n\r\nexport const WeatherInfoIcons = {\r\n    sunset: \"/icons/temp.svg\",\r\n    sunrise: \"/icons/temp.svg\",\r\n    humidity: \"/icons/humidity.svg\",\r\n    wind: \"/icons/wind.svg\",\r\n    pressure: \"/icons/pressure.svg\"\r\n};\r\n\r\nconst WeatherComponent = (props) => {\r\n    const { weather } = props; // Destructuring properties\r\n    const isDay = weather?.weather[0].icon?.includes('d')\r\n\r\n    const getTime = (timeStamp) => {\r\n        return `${new Date(timeStamp * 1000).getHours()} : ${new Date(timeStamp * 1000).getMinutes()}`\r\n    };\r\n\r\n    return (<>\r\n        <WeatherCondition>\r\n            <Condition>\r\n                <span>{`${Math.floor(weather?.main?.temp - 273)}C`}</span>\r\n                {` | ${weather?.weather[0].description}`}\r\n            </Condition>\r\n            <WeatherLogo src={`${ICON_URL}/${weather?.weather[0].icon}.png`} />\r\n        </WeatherCondition>\r\n        <Location>{`${weather?.name}, ${weather?.sys?.country}`}</Location>\r\n        <WeatherInfo>Weather Info</WeatherInfo>\r\n        <WeatherInfoContainer>\r\n            <WeatherInfoComponent\r\n                name={isDay ? \"sunrise\" : \"sunset\"}\r\n                value={getTime(weather?.sys[isDay ? \"sunrise\" : \"sunset\"])} />\r\n            <WeatherInfoComponent name=\"humidity\" value={weather?.main?.humidity} />\r\n            <WeatherInfoComponent name=\"wind\" value={weather?.wind?.speed} />\r\n            <WeatherInfoComponent name=\"pressure\" value={weather?.main?.pressure} />\r\n        </WeatherInfoContainer>\r\n    </>);\r\n};\r\n\r\nexport default WeatherComponent;","import styled from \"styled-components\";\nimport CityComponent from \"./modules/CityComponent\";\nimport WeatherComponent from \"./modules/WeatherComponent\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst API_KEY = \"4a421b88209bf37a19e22021337370e2\"\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: auto;\n  align-items: center;\n  box-shadow: 0 3px 6px 0 #555;\n  padding: 20px 10px;\n  border-radius: 4px;\n  width: 380px;\n  background: white;\n  font-family: Montserrat;\n`;\n\nconst AppLabel = styled.span`\n  color: black;\n  font-size: 18px;\n`;\n\nfunction App() {\n  const [city, updateCity] = useState();\n  const [weather, updateWeather] = useState();\n\n  const fetchWeather = async (e) => {\n    e.preventDefault();\n    const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`);\n    console.log(response);\n    updateWeather(response.data);\n  };\n\n  return (\n    <Container>\n      <AppLabel>Weather App</AppLabel>\n      {weather ? <WeatherComponent weather={weather} /> : <CityComponent updateCity={updateCity} fetchWeather={fetchWeather} />}\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n); \n"],"sourceRoot":""}